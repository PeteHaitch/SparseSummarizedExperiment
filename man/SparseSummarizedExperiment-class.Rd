% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SparseSummarizedExperiment-class.R
\docType{class}
\name{SparseSummarizedExperiment-class}
\alias{SparseSummarizedExperiment-class}
\alias{[,SparseSummarizedExperiment,ANY-method}
\alias{[,SparseSummarizedExperiment-method}
\alias{[<-,SparseSummarizedExperiment,ANY,ANY,SparseSummarizedExperiment-method}
\alias{cbind,SparseSummarizedExperiment-method}
\alias{combine,SparseSummarizedExperiment,SparseSummarizedExperiment-method}
\alias{makeSEFromSSE}
\alias{rbind,SparseSummarizedExperiment-method}
\alias{show,SparseSummarizedExperiment-method}
\alias{sparseAssay}
\alias{sparseAssay,SparseSummarizedExperiment,character-method}
\alias{sparseAssay,SparseSummarizedExperiment,missing-method}
\alias{sparseAssay,SparseSummarizedExperiment,numeric-method}
\alias{sparseAssay<-}
\alias{sparseAssay<-,SparseSummarizedExperiment,character,SimpleList-method}
\alias{sparseAssay<-,SparseSummarizedExperiment,missing,SimpleList-method}
\alias{sparseAssay<-,SparseSummarizedExperiment,numeric,SimpleList-method}
\alias{sparseAssayNames}
\alias{sparseAssayNames,SparseSummarizedExperiment-method}
\alias{sparseAssayNames<-}
\alias{sparseAssayNames<-,SparseSummarizedExperiment,character-method}
\alias{sparseAssays}
\alias{sparseAssays,SparseSummarizedExperiment-method}
\alias{sparseAssays<-}
\alias{sparseAssays<-,SparseSummarizedExperiment,SimpleList-method}
\alias{sparseAssays<-,SparseSummarizedExperiment,SparseAssays-method}
\alias{sparseAssays<-,SparseSummarizedExperiment,list-method}
\title{SparseSummarizedExperiment objects}
\usage{
## Constructor

# See ?RangedSparseSummarizedExperiment for the constructor function.

## Accessors

sparseAssayNames(x, ...)
sparseAssayNames(x, ...) <- value
sparseAssays(x, ..., withDimnames = TRUE)
sparseAssays(x, ..., withDimnames = TRUE) <- value
sparseAssay(x, i, ...)
sparseAssay(x, i, ...) <- value

## Subsetting

\S4method{[}{SparseSummarizedExperiment}(x, i, j, ...)

## Combining

\S4method{combine}{SparseSummarizedExperiment,SparseSummarizedExperiment}(x, y, ...)
}
\arguments{
\item{x, y}{A SparseSummarizedExperiment object.}

\item{...}{For \code{sparseAssay}, \code{...} may contain
       \code{withDimnames}, which is forwarded to \code{sparseAssays}.

       For \code{cbind}, \code{rbind}, and \code{combine}, \code{...}
       contains SparseSummarizedExperiment objects to be combined.

       For other accessors, ignored.}

\item{i, j}{For \code{sparseAssay}, \code{sparseAssay<-}, \code{i} is a
       numeric or character scalar; see \sQuote{Accessors} for additional
       constraints.

       For \code{[,SparseSummarizedExperiment},
       \code{[,SparseSummarizedExperiment<-}, \code{i}, \code{j} are
       subscripts that can act to subset the rows (features) and columns
       (samples) of \code{x}, that is the sparse assay elements of
       \code{sparseAssays} and the \code{matrix} elements of \code{assays}.

       For \code{[[,SparseSummarizedExperiment},
       \code{[[,SparseSummarizedExperiment<-}, \code{i}, is a scalar index
       (e.g., \code{character(1)} or \code{integer(1)}) into a column of
       \code{colData}.}

\item{withDimnames}{A \code{logical(1)}, indicating whether dimnames should
be applied to extracted sparse assay elements. Setting
\code{withDimnames = FALSE} increases the speed and memory efficient
with which sparse assays are extracted. \code{withDimnames = TRUE}
in the setter \code{sparseAssays<-} allows efficient complex
assignments (e.g., updating names of sparse assays,
\code{names(sparseAssays(x, withDimnames = FALSE)) <- ...} is more
efficient that \code{names(sparseAssays(x)) <- ...}); it does not
influence actual assignment of dimnames to sparse assays.
\strong{NOTE}: For this particular example, it is simpler and just as
efficient to use \code{sparseAssayNames(x) <- ...}.}

\item{value}{An object of a class specified in the S4 method signature or as
outlined in \sQuote{Details}.}
}
\description{
The SparseSummarizedExperiment class extends the
\link[SummarizedExperiment]{SummarizedExperiment0} class by adding the
\code{sparseAssays} slot, which contains a \link{SparseAssays} object.

Note that \link[SummarizedExperiment]{SummarizedExperiment0} is the parent
of the SparseSummarizedExperiment class which means that all methods
documented in \code{?}\link[SummarizedExperiment]{SummarizedExperiment0}
also work on a SparseSummarizedExperiment. Note also that
SparseSummarizedExperiment is a parent of the
\link{RangedSparseSummarizedExperiment} class which means that all the
methods documented below also work on a
\link{RangedSparseSummarizedExperiment}. See
\sQuote{Implementation and Extension} for details.
}
\details{
These details assume familiarity with the
\link[SummarizedExperiment]{SummarizedExperiment0} class; please first read
this linked documentation.

The SparseSummarizedExperiment class is meant for \emph{sparse}
numeric data derived from a sequencing experiment. These data are stored as
a \link{SparseAssays} object in the \code{sparseAssays} slot of the
SparseSummarizedExperiment. In this instance, \emph{sparse} means data where
there are multiple measurements per-feature, per-sample and where
measurements with the same value (including missing values) are frequently
observed. \strong{NOTE}: SparseSummarizedExperiment objects only payoff
compared to \code{\link[SummarizedExperiment]{SummarizedExperiment0}} when
this condition is satisfied.

A SparseSummarizedExperiment object can also store non-sparse data by
storing these data in the \code{assays} slot, as would be done in a
\link[SummarizedExperiment]{SummarizedExperiment0} object.

The \emph{sparse data} are accessed by using the \code{sparseAssays}
funcion, described below. This returns a \link{SimpleList} object.

For an example of where SparseSummarizedExperiment objects are useful,
please see the MethPat class in the \pkg{MethylationTuples} package
(currently GitHub-only,
\email{https://github.com/PeteHaitch/MethylationTuples/}).
}
\section{Constructor}{

SparseSummarizedExperiment instances are constructed using the
\code{SparseSummarizedExperiment} function documented in
\code{?}\link{RangedSparseSummarizedExperiment}.
}

\section{Accessors}{

All the accessors documented in
\code{?}\link[SummarizedExperiment]{SummarizedExperiment0} are also
applicable to SparseSummarizedExperiment objects. In addition, when \code{x}
is a SparseSummarizedExperiment objects, the following accessors are
applicable.

\describe{
# TODO: Check equivalence claim
 \item{\code{sparseAssays(x)}, \code{sparseAssays(x) <- value}:}{Get or set
   the sparse assays. Unlike \code{\link[SummarizedExperiment]{assays}(x)},
   \code{sparseAssays(x)} does not coerce the returned object to a
   \link[S4Vectors]{SimpleList} object but preserves it as the concrete
   \link{SparseAssays} subclass. \code{value} is a \link{SparseAssays}
   object with the same dimensions as \code{x} or a \link{SimpleList} object
   (which will be coerced to a \code{SparseAssays} object and must then have
   the same dimensions as \code{x}).}

# TODO: Check equivalence claim
# TODO: Could/should I allow value to be a SimpleList
 \item{\code{sparseAssay(x, i)}, \code{sparseAssay(x, i) <- value}:}{Get or
   set the \code{i}th (default first) sparse assay elements. Unlike
   \code{\link[SummarizedExperiment]{assay}(x, i)},
   \code{sparseAssay(x, i)} allows vector \code{i} and preserves the
   returned object as the concrete  \link{SparseAssays} subclass.
   \code{value} must be a \link{SparseAssays} object (with the same concrete
   subclass) of the same dimension as \code{x}, and with dimension names
   \code{NULL} or consistent with those of \code{x} and \code{length} equal
   to \code{length(i)}.}

 \item{\code{sparseAssayNames(x)}, \code{sparseAssayNames(x) <- value}:}{Get
   or set the names of \code{sparseAssays()} elements.}
}
}

\section{Subsetting}{

Subsetting behaviour is inherited from methods defined for
SummarizedExperiment0 methods; see
\code{?}\link[SummarizedExperiment]{SummarizedExperiment0}.
}

\section{Combining}{

SparseSummarizedExperiment objects can be combined in three different ways.
\enumerate{
 \item \code{rbind} Suitable for when each object has the same samples.
 \item \code{cbind} Suitable for when each object has unique samples.
 \item \code{combine} Suitable in either case, \strong{however}, requires
 that \code{dimnames} are set on each object and that all objects have an
 identical number of sparse assays with identical names.
}

\code{cbind()} and \code{rbind()} behaviour is inherited from methods
defined for SummarizedExperiment0 methods; see
\code{?}\link[SummarizedExperiment]{SummarizedExperiment0}. The
\code{sparseAssays} slot is appropriately handled in a \code{cbind()} or
\code{rbind()}; see \code{\link{cbind,SimpleListSparseAssays-method}} and
\code{\link{rbind,SimpleListSparseAssays-method}} for details.
Additionally, the \pkg{SparseSummarizedExperiment} defines
\code{\link[BiocGenerics]{combine}} methods for both
\link[SummarizedExperiment]{SummarizedExperiment0} and
SparseSummarizedExperiment objects. The \code{sparseAssays} slot is
appropriately handled in a \code{combine()}; see
\code{\link{combine,SimpleListSparseAssays,SimpleListSparseAssays-method}}
for details.
}

\section{Coercion}{

Coercion from a SparseSummarizedExperiment (resp.
\link{RangedSparseSummarizedExperiment}) to a
\link[SummarizedExperiment]{SummarizedExperiment0} (resp.
\link[SummarizedExperiment]{RangedSummarizedExperiment}) can be done in one
of two ways. The first method uses implicit coercion, e.g., if \code{x} is a
SparseSummarizedExperiment object then
\code{as(x, "SparseSummarizedExperiment0")} coerces it to a
\link[SummarizedExperiment]{SummarizedExperiment0} \strong{but drops the
\code{sparseAssays} slot}. The second method uses an
explicit coercion to coerce the \link{SparseAssays} object in
\code{sparseAssays} slot into a \link{Assays} object and adds it to the
\code{assays} slot of the resulting object, \code{makeSEFromSSE(x)}.
}

\section{Implementation and Extension}{

This section contains advanced material meant for package developers.

The SparseSummarizedExperiment/RangedSparseSummarizedExperiment class
hierarchy is as follows:
\preformatted{
SummarizedExperiment0
|-- RangedSummarizedExperiment
|   |-- RangedSparseSummarizedExperiment
|-- SparseSummarizedExperiment
|   |-- RangedSparseSummarizedExperiment
}

That is, the \link{RangedSparseSummarizedExperiment} is a subclass of both
SparseSummarizedExperiment and
\link[SummarizedExperiment]{RangedSummarizedExperiment}, although
SparseSummarizedExperiment takes precedence.

SparseSummarizedExperiment is implemented as an S4 class, and can be
extended in the usual way, using
\code{contains = "SparseSummarizedExperiment"} in the new class definition.
Similarly, the RangedSparseSummarizedExperiment can be extended using
\code{contains = "RangedSparseSummarizedExperiment"} in the new class
definition.

In addition, the representation of the \code{sparseAssays} slot of
SparseSummarizedExperiment is as a virtual class, \link{SparseAssays}. This
allows derived classes (\code{contains = "SparseAssays"}) to easily
implement alternative requirement for the sparse assays, e.g., backed by
file-based storage like NetCDF or the \pkg{ff} package, while re-using
the existing SparseSummarizedExperiment class without modification. See
\link{SparseAssays} for more information.

The current \code{sparseAssays} slot is implemented as a
\link{SimpleListSparseAssays} object.

It is generally advisable to work with
the sparse representation of the data wherever possible, but there are
times when the \emph{densified} version of the sparse data are required.
This can be achieved using the \code{densify = TRUE} argument in
\code{sparseAssays()} and \code{sparseAssay()}. Note, however, that it is
generally unadvisable to simultaneously densify all sparse assays and
samples; see \code{\link{densify}}.
}
\examples{
sl1 <- SimpleList(
s1 = SimpleList(key = as.integer(c(NA, 1, NA, NA, 2, NA, 3, NA, 4, 5)),
                value = matrix(1:10, ncol = 2)),
s2 = SimpleList(key = as.integer(c(NA, NA, 1, 2, NA, NA, 3, 4, NA, NA)),
                value = matrix(8:1, ncol = 2)))

sl2 <- SimpleList(
  s1 = SimpleList(key = as.integer(c(NA, 1, NA, 2, 2, NA, 1, NA, NA, 1)),
                  value = matrix(1:2, ncol = 1)),
  s2 = SimpleList(key = as.integer(c(1, 1, 1, 2, NA, NA, NA, NA, NA, NA)),
                  value = matrix(4:3, ncol = 1)))
sa <- SparseAssays(SimpleList(sa1 = sl1, sa2 = sl2))

colData <- DataFrame(Genotype = c("WT", "KO"),
                     row.names = c("s1", "s2"))
sse <- SparseSummarizedExperiment(sparseAssays = sa,
                                  colData = colData)
sse
dim(sse)
dimnames(sse)
sparseAssay(sse)
# densify the first sparse assay.
# In general its a bad idea to use densify = TRUE, but these data are small
# enough not to worry.
# TODO: Should I use sparseAssay() or sparseAssays() in the example; check
#       out SummarizedExperiment0 examples.
densify(sparseAssay(sse), 1, 1:2)[[1]]
SAapply(sparseAssays(sse), function(x) x^2)
\dontrun{
 # Need sparsify = TRUE to use the replace method
 sparseAssays(sse) <- SAapply(sparseAssays(sse), function(x) x^2)
}
sparseAssays(sse) <- SAapply(sparseAssays(sse), function(x) x^2,
                             sparsify = TRUE)
densify(sparseAssays(sse), 1:2, 1:2)

sparseAssay(sse)
# densify the first sparse assay
densify(sparseAssay(sse), 1, 1:2)[[1]]

sse[, sse$Genotype == "WT"]

## cbind() combines objects with the same features of interest
## but different samples:
sse1 <- sse
sse2 <- sse1[, 1]
colnames(sse2) <- "s3"
cmb1 <- cbind(sse1, sse2)
dim(cmb1)
dimnames(cmb1)

## rbind() combines objects with the same samples but different
## features of interest:
sse1 <- sse
sse2 <- sse1[1:5, ]
rownames(sse2) <- letters[1:nrow(sse2)]
cmb2 <- rbind(sse1, sse2)
dim(cmb2)
dimnames(cmb2)

## combine() combines objects with potentially different features of interest
## and different samples, by matching on names:
sse1 <- sse[1:5, ]
names(sse1) <- letters[1:5]
sse2 <- sse[3:8, 2]
names(sse2) <- letters[3:8]
cmb3 <- combine(sse1, sse2)
dim(cmb3)
dimnames(cmb3)

}
\author{
Peter Hickey, \email{peter.hickey@gmail.com}
}
\seealso{
\itemize{
 \item \link{RangedSparseSummarizedExperiment} objects.
 \item \link[SummarizedExperiment]{SummarizedExperiment0} objects in the
   \pkg{SummarizedExperiment} package.
 \item \link{SparseAssays} and \link{SimpleListSparseAssays} objects.
}
}

