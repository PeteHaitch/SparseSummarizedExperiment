% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GenomicRanges-pkg.R
\docType{methods}
\name{combine,GRanges,GRanges-method}
\alias{combine,GRanges,GRanges-method}
\title{Combining GRanges objects}
\usage{
\S4method{combine}{GRanges,GRanges}(x, y, ...)
}
\arguments{
\item{x}{A \link[GenomicRanges]{GRanges} object.}

\item{y}{A \link[GenomicRanges]{GRanges} object.}

\item{...}{One or more \link[GenomicRanges]{GRanges} objects.}
}
\value{
A \link[GenomicRanges]{GRanges} object.
}
\description{
Combine multiple \link[GenomicRanges]{GRanges} objects using a union
strategy.
}
\details{
Unlike other \code{combine} methods (e.g.,
\code{\link[BiocGenerics]{combine,matrix,matrix-method}}), this does not
make use of the \code{dimnames}/\code{names} of \code{x}, \code{y}, and
\code{...}. In fact, the \code{names} are ignored entirely and the method
effectively calls \code{unique(c(x, y, ...))}.
}
\examples{
x <- GRanges(seqnames = c("chr1", "chr2"),
               ranges = IRanges(c(1, 11), c(11, 20)),
               seqinfo = Seqinfo(c("chr1", "chr2", "chr3")))
y <- GRanges(seqnames = c("chr2", "chr3"),
               ranges = IRanges(c(11, 21), c(20, 30)),
               seqinfo = Seqinfo(c("chr1", "chr2", "chr3")))
combine(x, y)

}
\author{
Peter Hickey, \email{peter.hickey@gmail.com}
}

