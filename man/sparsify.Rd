% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R
\name{sparsify}
\alias{sparsify}
\title{Sparsify a matrix-like object.}
\usage{
sparsify(x, return_class, ...)
}
\arguments{
\item{x}{A matrix-like object, e.g., \code{\link[base]{matrix}},
\code{\link[base]{data.frame}}, or
\code{\link[data.table]{data.table}}.}

\item{return_class}{The class of the returned object.}

\item{...}{Additional arguments, for use in specific methods.}
}
\value{
An object with the concepts of a \code{key} and a \code{value}. The
specific return value is left to individual methods. For example, the
\code{sparsify,SimpleList,matrix-method} returns a
\link[S4Vectors]{SimpleList} object with an \code{integer} \code{key}
element and a \code{matrix} \code{value} element.
}
\description{
A generic function to sparsify a matrix-like object, e.g.,
\code{\link[base]{matrix}}, \code{\link[base]{data.frame}}, or
\code{\link[data.table]{data.table}}.
}
\details{
While the concepts of "sparsify" and "densify" are inverse
operations, in general, \code{identical(densify(sparsify(x)), x)} is
\strong{\code{FALSE}}. This is because the return value of \code{sparsify()}
is generally not compatible with the signature of a
\code{\link{densify}()} method.
}
\examples{
# See ?SimpleListSparseAssays

}
\author{
Peter Hickey, \email{peter.hickey@gmail.com}
}
\seealso{
\itemize{
 \item \link{SimpleListSparseAssays}
}
}

